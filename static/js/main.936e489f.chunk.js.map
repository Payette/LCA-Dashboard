{"version":3,"sources":["data/gwp.csv","data/allimpacts.csv","HorizontalBarChart.js","StackedBarChart.js","data/LoadData.js","MaterialList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","valueData","d","frequency","width","height","data","horizontalMax","horizontalScale","scaleLinear","rangeRound","domain","Math","max","map","GradientTealBlue","id","fill","rx","Group","top","i","letter","categoryData","barWidth","barY","Bar","key","x","y","onClick","event","alert","JSON","stringify","Object","values","withTooltip","tooltipTimeout","xAxisLabel","events","margin","left","right","bottom","tooltipOpen","tooltipLeft","tooltipTop","tooltipData","hideTooltip","showTooltip","yMax","keys","filter","totals","reduce","ret","cur","t","dailyTotal","k","push","timeParse","timeFormat","material","xScale","nice","yScale","scaleBand","padding","color","scaleOrdinal","range","ParentSize","w","xMax","style","position","BarStackHorizontal","barStacks","barStack","bars","bar","index","onMouseLeave","setTimeout","onMouseMove","clearTimeout","AxisLeft","hideAxisLine","hideTicks","scale","stroke","tickStroke","tickLabelProps","value","fontSize","textAnchor","dy","AxisBottom","label","labelProps","display","justifyContent","direction","labelMargin","Tooltip","minWidth","backgroundColor","PAPAPARSE_CONFIG","download","header","skipEmptyLines","cb","Papa","parse","dataAllImpacts","complete","results","file","Array","isArray","resultData","impact1","parseFloat","impact2","impact3","console","error","errors","dataGWP","Variable","Attended","MaterialList","props","state","items","materials","isShiftDown","selectedItems","lastSelectedItem","listEl","handleKeyUp","bind","handleKeyDown","handleSelectItem","handleSelectStart","document","addEventListener","this","removeEventListener","e","preventDefault","setState","target","nextValue","getNextValue","updateSelectedMaterials","hasBeenSelected","includes","newSelectedItems","getNewSelectedItems","selections","Set","item","currentSelectedIndex","findIndex","lastSelectedIndex","slice","min","onChange","type","checked","htmlFor","ref","node","renderItems","PureComponent","App","chartType","allImpactsData","gwpData","selectedMaterials","handleInputChange","LoadData","name","log","newSelectedMaterials","allImpactsDataSelectedMaterialsOnly","className","for","length","StackedBarChart","HorizontalBarChart","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.936e489f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gwp.7df9e12d.csv\";","module.exports = __webpack_public_path__ + \"static/media/allimpacts.38f595ea.csv\";","import React from 'react';\r\nimport { Bar } from '@vx/shape';\r\nimport { Group } from '@vx/group';\r\nimport { GradientTealBlue } from '@vx/gradient';\r\nimport { scaleLinear } from '@vx/scale';\r\n\r\n// accessors\r\nconst categoryData = d => d.letter;\r\nconst valueData = d => +d.frequency * 100;\r\n\r\nexport default ({ width, height, data }) => {\r\n  // bounds\r\n  const horizontalPadding = 60;\r\n  const horizontalMax = width - 2*horizontalPadding;\r\n\r\n  // scales\r\n  const horizontalScale = scaleLinear({\r\n    rangeRound: [horizontalMax, 0],\r\n    domain: [0, Math.max(...data.map(valueData))]\r\n  });\r\n\r\n  return (\r\n    <svg width={width} height={height}>\r\n      <GradientTealBlue id=\"teal\" />\r\n      <rect width={width} height={height} fill={\"url(#teal)\"} rx={14} />\r\n      <Group top={40}>\r\n        {data.map((d, i) => {\r\n          const letter = categoryData(d);\r\n          const barHeight = 20;\r\n          const barWidth = horizontalMax - horizontalScale(valueData(d));\r\n          const barY = (barHeight + 5) * i;\r\n          const barX = horizontalPadding;\r\n          return (\r\n            <Bar\r\n              key={`bar-${letter}`}\r\n              x={barX}\r\n              y={barY}\r\n              width={barWidth}\r\n              height={barHeight}\r\n              fill=\"rgba(23, 233, 217, .5)\"\r\n              onClick={event => {\r\n                alert(`clicked: ${JSON.stringify(Object.values(d))}`);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </Group>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {BarStackHorizontal} from '@vx/shape';\r\nimport {Group} from '@vx/group';\r\nimport {AxisBottom, AxisLeft} from '@vx/axis';\r\nimport {cityTemperature} from '@vx/mock-data';\r\nimport {scaleBand, scaleLinear, scaleOrdinal} from '@vx/scale';\r\nimport {timeParse, timeFormat} from 'd3-time-format';\r\nimport {withTooltip, Tooltip} from '@vx/tooltip';\r\nimport {LegendOrdinal} from '@vx/legend';\r\nimport {ParentSize} from '@vx/responsive';\r\n\r\nexport default withTooltip(({\r\n  height,\r\n  data,\r\n  xAxisLabel,\r\n  events = false,\r\n  margin = {\r\n    top: 40,\r\n    left: 100,\r\n    right: 40,\r\n    bottom: 100\r\n  },\r\n  tooltipOpen,\r\n  tooltipLeft,\r\n  tooltipTop,\r\n  tooltipData,\r\n  hideTooltip,\r\n  showTooltip\r\n}) => {\r\n\r\n\r\n  // bounds\r\n  // const xMax = width - margin.left - margin.right;\r\n  const yMax = height - margin.top - margin.bottom;\r\n\r\n  const purple1 = '#6c5efb';\r\n  const purple2 = '#c998ff';\r\n  const purple3 = '#a44afe';\r\n  const bg = '#eaedff';\r\n\r\n  const keys = Object.keys(data[0]).filter(d => d !== 'material');\r\n\r\n  const totals = data.reduce((ret, cur) => {\r\n    const t = keys.reduce((dailyTotal, k) => {\r\n      dailyTotal += + cur[k];\r\n      return dailyTotal;\r\n    }, 0);\r\n    ret.push(t);\r\n    return ret;\r\n  }, []);\r\n\r\n  const parseDate = timeParse('%Y%m%d');\r\n  const format = timeFormat('%b %d');\r\n  const formatDate = date => format(parseDate(date));\r\n\r\n  // accessors\r\n  const y = d => d.material;\r\n\r\n  // scales\r\n  const xScale = scaleLinear({\r\n    domain: [\r\n      0,\r\n      Math.max(...totals)\r\n    ],\r\n    nice: true\r\n  });\r\n  const yScale = scaleBand({domain: data.map(y), padding: 0.2});\r\n  const color = scaleOrdinal({\r\n    domain: keys,\r\n    range: [purple1, purple2, purple3]\r\n  });\r\n\r\n  let tooltipTimeout;\r\n\r\n  yScale.rangeRound([yMax, 0]);\r\n\r\n  return (<ParentSize>\r\n    {\r\n      ({width: w}) => {\r\n        const xMax = w - margin.left - margin.right;\r\n        xScale.rangeRound([0, xMax]);\r\n        // w = w- 100;\r\n\r\n        return (<div style={{\r\n            position: 'relative'\r\n          }}>\r\n\r\n          <svg width={w} height={height}>\r\n            <rect width={w} height={height} fill={bg} rx={14}/>\r\n            <Group top={margin.top} left={margin.left}>\r\n              <BarStackHorizontal data={data} keys={keys} height={yMax} y={y} xScale={xScale} yScale={yScale} color={color}>\r\n                {\r\n                  barStacks => {\r\n                    return barStacks.map(barStack => {\r\n                      return barStack.bars.map(bar => {\r\n                        return (<rect key={`barstack-horizontal-${barStack.index}-${bar.index}`} x={bar.x} y={bar.y} width={bar.width} height={bar.height} fill={bar.color} onClick={event => {\r\n                            if (!events)\r\n                              return;\r\n                            alert(`clicked: ${JSON.stringify(bar)}`);\r\n                          }} onMouseLeave={event => {\r\n                            tooltipTimeout = setTimeout(() => {\r\n                              hideTooltip();\r\n                            }, 300);\r\n                          }} onMouseMove={event => {\r\n                            if (tooltipTimeout)\r\n                              clearTimeout(tooltipTimeout);\r\n                            const top = bar.y + margin.top;\r\n                            const left = bar.x + bar.width + margin.left;\r\n                            showTooltip({tooltipData: bar, tooltipTop: top, tooltipLeft: left});\r\n                          }}/>);\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n              </BarStackHorizontal>\r\n              <AxisLeft hideAxisLine={true} hideTicks={true} scale={yScale} /* tickFormat={formatDate} */\n\n                stroke={purple3} tickStroke={purple3} tickLabelProps={(value, index) => ({fill: purple3, fontSize: 11, textAnchor: 'end', dy: '0.33em'})}/>\r\n              <AxisBottom top={yMax} scale={xScale} stroke={purple3} tickStroke={purple3} hideAxisLine={true} hideTicks={true} label={xAxisLabel} tickLabelProps={(value, index) => ({fill: purple3, fontSize: 11, textAnchor: 'middle'})} labelProps={{\r\n                  fontSize: 18,\r\n                  fill: purple3\r\n                }}/>\r\n            </Group>\r\n          </svg>\r\n          <div style={{\r\n              position: 'absolute',\r\n              top: margin.top / 2 - 10,\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              fontSize: '14px'\r\n            }}>\r\n            <LegendOrdinal scale={color} direction=\"row\" labelMargin=\"0 15px 0 0\"/>\r\n          </div>\r\n          {\r\n            tooltipOpen && (<Tooltip top={tooltipTop} left={tooltipLeft} style={{\r\n                minWidth: 60,\r\n                backgroundColor: 'rgba(0,0,0,0.9)',\r\n                color: 'white'\r\n              }}>\r\n              <div style={{\r\n                  color: color(tooltipData.key)\r\n                }}>\r\n                <strong>{tooltipData.key}</strong>\r\n              </div>\r\n              <div>{tooltipData.bar.data[tooltipData.key]}</div>\r\n              <div>\r\n                <small>{y(tooltipData.bar.data)}</small>\r\n              </div>\r\n            </Tooltip>)\r\n          }\r\n        </div>);\r\n      }\r\n    }\r\n  </ParentSize>);\r\n\r\n});\r\n","import Papa from 'papaparse';\r\nimport dataGWP from './gwp.csv';\r\nimport dataAllImpacts from './allimpacts.csv';\r\n\r\nconst PAPAPARSE_CONFIG = {\r\n  download: true,\r\n  header: true,\r\n  skipEmptyLines: true\r\n};\r\n\r\nexport default {\r\n  allImpactsData: (cb) => {\r\n    Papa.parse(dataAllImpacts, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         const resultData = results.data.map(d => {\r\n           return { material: d.material, impact1: parseFloat(d.impact1), impact2: parseFloat(d.impact2), impact3: parseFloat(d.impact3) }\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  },\r\n\r\n  gwpData: (cb) => {\r\n    Papa.parse(dataGWP, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         const resultData = results.data.map(d => {\r\n           return { letter: d.Variable, frequency: parseFloat(d.Attended) }\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  }\r\n};\r\n","/* https://codesandbox.io/s/multiselect-checkboxes-oennn */\r\nimport React, { PureComponent } from \"react\";\r\n\r\nexport default class MaterialList extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.materials.map(material => { return { label: material, id: material }}),\r\n      isShiftDown: false,\r\n      selectedItems: [],\r\n      lastSelectedItem: null\r\n    };\r\n\r\n    this.listEl = null;\r\n\r\n    this.handleKeyUp = this.handleKeyUp.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleSelectItem = this.handleSelectItem.bind(this);\r\n    this.handleSelectStart = this.handleSelectStart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keyup\", this.handleKeyUp, false);\r\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\r\n    this.listEl.addEventListener(\"selectstart\", this.handleSelectStart, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keyup\", this.handleKeyUp);\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n    this.listEl.removeEventListener(\"selectstart\", this.handleSelectStart);\r\n  }\r\n\r\n  handleSelectStart(e) {\r\n    // if we're clicking the labels it'll select the text if holding shift\r\n    if (this.state.isShiftDown) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleKeyUp(e) {\r\n    if (e.key === \"Shift\" && this.state.isShiftDown) {\r\n      this.setState({ isShiftDown: false });\r\n    }\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.key === \"Shift\" && !this.state.isShiftDown) {\r\n      this.setState({ isShiftDown: true });\r\n    }\r\n  }\r\n\r\n  handleSelectItem(e) {\r\n    const { value } = e.target;\r\n    const nextValue = this.getNextValue(value);\r\n\r\n    this.setState({ selectedItems: nextValue, lastSelectedItem: value });\r\n    this.props.updateSelectedMaterials(nextValue);\r\n  }\r\n\r\n  getNextValue(value) {\r\n    const { isShiftDown, selectedItems } = this.state;\r\n    const hasBeenSelected = !selectedItems.includes(value);\r\n\r\n    if (isShiftDown) {\r\n      const newSelectedItems = this.getNewSelectedItems(value);\r\n      // de-dupe the array using a Set\r\n      const selections = [...new Set([...selectedItems, ...newSelectedItems])];\r\n\r\n      if (!hasBeenSelected) {\r\n        return selections.filter(item => !newSelectedItems.includes(item));\r\n      }\r\n\r\n      return selections;\r\n    }\r\n\r\n    // if it's already in there, remove it, otherwise append it\r\n    return selectedItems.includes(value)\r\n      ? selectedItems.filter(item => item !== value)\r\n      : [...selectedItems, value];\r\n  }\r\n\r\n  getNewSelectedItems(value) {\r\n    const { lastSelectedItem, items } = this.state;\r\n    const currentSelectedIndex = items.findIndex(item => item.id === value);\r\n    const lastSelectedIndex = items.findIndex(\r\n      item => item.id === lastSelectedItem\r\n    );\r\n\r\n    return items\r\n      .slice(\r\n        Math.min(lastSelectedIndex, currentSelectedIndex),\r\n        Math.max(lastSelectedIndex, currentSelectedIndex) + 1\r\n      )\r\n      .map(item => item.id);\r\n  }\r\n\r\n  renderItems() {\r\n    const { items, selectedItems } = this.state;\r\n    return items.map(item => {\r\n      const { id, label } = item;\r\n      return (\r\n        <li key={id}>\r\n          <input\r\n            onChange={this.handleSelectItem}\r\n            type=\"checkbox\"\r\n            checked={selectedItems.includes(id)}\r\n            value={id}\r\n            id={`item-${id}`}\r\n          />\r\n          <label htmlFor={`item-${id}`}>{label}</label>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <ul ref={node => (this.listEl = node)}>{this.renderItems()}</ul>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport HorizontalBarChart from './HorizontalBarChart';\nimport StackedBarChart from './StackedBarChart';\nimport LoadData from './data/LoadData';\nimport MaterialList from './MaterialList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartType: \"allImpacts\",\n      allImpactsData: [],\n      gwpData: [],\n      materials: [],\n      selectedMaterials: []\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    LoadData.allImpactsData(data => {\n      const materials = data.map(d => d.material);\n      this.setState({\n        allImpactsData: data,\n        materials: materials\n      });\n    });\n    LoadData.gwpData(data => this.setState({ gwpData: data }));\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    }, () => {\n      console.log('new state: ', this.state);\n    });\n  }\n\n  updateSelectedMaterials(newSelectedMaterials) {\n    this.setState({\n      selectedMaterials: newSelectedMaterials\n    })\n  }\n\n  render() {\n    const allImpactsDataSelectedMaterialsOnly = this.state.allImpactsData.filter(d => this.state.selectedMaterials.includes(d.material));\n\n    return (\n      <div className=\"App\">\n        <h1>LCA Tool</h1>\n\n          <form>\n            <p>CHART TYPE:</p>\n            <input type=\"radio\" id=\"allImpacts\" name=\"chartType\" value=\"allImpacts\" checked={this.state.chartType === \"allImpacts\"} onChange={this.handleInputChange} />\n            <label htmlFor=\"allImpacts\">All Impacts</label>\n            <input type=\"radio\" id=\"GWP\" value=\"GWP\" name=\"chartType\" checked={this.state.chartType === \"GWP\"} onChange={this.handleInputChange} />\n            <label for=\"fGWP\">Global Warming Potential</label>\n            <input type=\"radio\" id=\"LCS\" value=\"LCS\" name=\"chartType\" checked={this.state.chartType === \"LCS\"} onChange={this.handleInputChange} />\n            <label for=\"LCS\">Life Cycle Stage</label>\n            <input type=\"radio\" id=\"MB\" value=\"MB\" name=\"chartType\" checked={this.state.chartType === \"MB\"} onChange={this.handleInputChange} />\n            <label for=\"MB\">Material Breakdown</label>\n\n            <p>LIFESPAN:</p>\n            <input type=\"radio\" id=\"tenY\" name=\"lifeSpan\" value=\"tenY\" checked=\"checked\" />\n            <label for=\"tenY\">10 Year (No Mod D.)</label>\n            <input type=\"radio\" id=\"sixty1\" name=\"lifeSpan\" value=\"sixty1\" />\n            <label for=\"sixty1\">60 Year (With Mod D)</label>\n            <input type=\"radio\" id=\"sixty2\" name=\"lifeSpan\" value=\"sixty2\" />\n            <label for=\"sixty2\">60 Year (No Mod D)</label>\n\n            <p>BIOGENIC CARBON:</p>\n            <input type=\"radio\" id=\"yBio\" name=\"biogenicCarbon\" value=\"yBio\" checked=\"checked\" />\n            <label for=\"yBio\">With Biogenic Carbon</label>\n            <input type=\"radio\" id=\"nBio\" name=\"biogenicCarbon\" value=\"nBio\" />\n            <label for=\"nBio\">No Biogenic Carbon</label>\n\n            {this.state.materials.length > 0 && <MaterialList materials={this.state.materials} updateSelectedMaterials={this.updateSelectedMaterials.bind(this)} />}\n\n        </form>\n\n        <div className=\"chartContainer\">\n        {this.state.chartType === \"allImpacts\" && allImpactsDataSelectedMaterialsOnly.length > 0 && <StackedBarChart\n          data={allImpactsDataSelectedMaterialsOnly}\n          height={600}\n          xAxisLabel=\"kg CO2eq ??\"\n        />}\n\n        {this.state.chartType === \"GWP\" && this.state.gwpData.length > 0 && <HorizontalBarChart\n          data={this.state.gwpData}\n          height={600}\n          xAxisLabel=\"kg CO2eq\"\n        />}\n        </div>\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}