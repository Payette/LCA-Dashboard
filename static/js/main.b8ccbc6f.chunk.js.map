{"version":3,"sources":["StackedBarChart.js","data/LoadData.js","MaterialList.js","App.js","serviceWorker.js","index.js","css/MaterialList.module.scss","css/StackedBarChart.module.scss","css/App.module.scss","data/gwp.csv","data/allimpacts.csv"],"names":["withTooltip","tooltipTimeout","colorBy","barHeight","selectedMaterials","metaData","allMaterials","xAxisLabel","events","margin","top","left","right","bottom","smallGap","tooltipOpen","tooltipLeft","tooltipTop","tooltipData","hideTooltip","showTooltip","selectedMaterialsGroupedByType","d3","key","d","type","entries","sort","a","b","materialOrdering","material","typeOrdering","keys","Object","filter","allMaterialTotals","reduce","ret","cur","t","dailyTotal","k","push","y","xScale","scaleLinear","domain","Math","max","nice","color","scaleOrdinal","range","ParentSize","w","width","xMax","rangeRound","previousY","chartHeight","length","className","styles","container","style","position","height","fill","rx","Group","map","sm","yMax","values","yScale","scaleBand","padding","yOffset","x1","y1","x2","y2","stroke","stroke-width","stroke-dasharray","stroke-linecap","BarStackHorizontal","data","barStacks","barStack","bars","bar","barColor","materialColors","index","x","onClick","event","alert","JSON","stringify","onMouseLeave","setTimeout","onMouseMove","clearTimeout","toolTipWidth","AxisLeft","hideAxisLine","hideTicks","scale","tickStroke","tickLabelProps","value","fontSize","textAnchor","dy","Text","verticalAnchor","AxisBottom","label","labelProps","display","justifyContent","Tooltip","minWidth","backgroundColor","tooltipContainer","PAPAPARSE_CONFIG","download","header","skipEmptyLines","Granite","Limestone","Brick","InsMetPanel","GFRC","ACM","Terracotta","PhenResin","FiberCement","Zinc","Granite1","Limestone1","Steel","Wood","impactColors","impact1","impact2","impact3","allImpactsData","cb","Papa","parse","dataAllImpacts","complete","results","file","Array","isArray","resultData","parseFloat","console","error","errors","gwpData","dataGWP","MaterialList","props","state","items","materials","id","selectedItems","initialSelectedMaterials","listEl","handleSelectItem","bind","e","target","nextValue","this","getNextValue","setState","updateSelectedMaterials","includes","item","materialColor","materialGraphic","onChange","checked","htmlFor","handleSelectAll","ref","node","renderItems","PureComponent","App","chartType","handleInputChange","LoadData","log","name","newSelectedMaterials","allImpactsDataSelectedMaterialsOnly","gwpDataSelectedMaterialsOnly","topcontrols","inputgroup","inputitem","for","sidebar","chartContainer","StackedBarChart","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b8ccbc6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {BarStackHorizontal} from '@vx/shape';\r\nimport {Group} from '@vx/group';\r\nimport {AxisBottom, AxisLeft} from '@vx/axis';\r\nimport { Text } from '@vx/text';\r\nimport {scaleBand, scaleLinear, scaleOrdinal} from '@vx/scale';\r\nimport {withTooltip, Tooltip} from '@vx/tooltip';\r\nimport {LegendOrdinal} from '@vx/legend';\r\nimport {ParentSize} from '@vx/responsive';\r\nimport * as d3 from 'd3';\r\nimport styles from './css/StackedBarChart.module.scss';\r\n\r\nexport default withTooltip(({\r\n  colorBy,\r\n  barHeight,\r\n  selectedMaterials,\r\n  metaData,\r\n  allMaterials,\r\n  xAxisLabel,\r\n  events = false,\r\n  margin = {\r\n    top: 40,\r\n    left: 220,\r\n    right: 40,\r\n    bottom: 100,\r\n    smallGap: 8\r\n  },\r\n  tooltipOpen,\r\n  tooltipLeft,\r\n  tooltipTop,\r\n  tooltipData,\r\n  hideTooltip,\r\n  showTooltip\r\n}) => {\r\n\r\n  const toolTipWidth = 200;\r\n  const toolTipHeight = 200;\r\n\r\n  const selectedMaterialsGroupedByType = d3.nest()\r\n  .key(function(d) { return d.type })\r\n  .entries(selectedMaterials.sort((a, b) => {\r\n    const orderA = metaData.materialOrdering[a.material] ? metaData.materialOrdering[a.material] : 1000;\r\n    const orderB = metaData.materialOrdering[b.material] ? metaData.materialOrdering[b.material] : 1000;\r\n    return orderA < orderB ? 1 : -1;\r\n  }))\r\n  .sort((a, b) => {\r\n    const orderA = metaData.typeOrdering[a.key] ? metaData.typeOrdering[a.key] : 1000;\r\n    const orderB = metaData.typeOrdering[b.key] ? metaData.typeOrdering[b.key] : 1000;\r\n    return orderA < orderB ? -1 : 1;\r\n  });\r\n\r\n  // bounds\r\n  // const xMax = width - margin.left - margin.right;\r\n  const headerFooterHeight = 160;\r\n  // const height = headerFooterHeight + (barHeight * selectedMaterials.length);\r\n  // const yMax = height - margin.top - margin.bottom;\r\n\r\n  const purple1 = \"#f99f2d\";\r\n  const purple2 = \"#febd2a\";\r\n  const purple3 = \"#ffd743\";\r\n  const textColor = \"#000000\";\r\n  const bg = '#ffffff';\r\n\r\n  const keys = Object.keys(selectedMaterials[0]).filter(d => d !== 'material' && d !== 'type');\r\n\r\n  const allMaterialTotals = allMaterials.reduce((ret, cur) => {\r\n    const t = keys.reduce((dailyTotal, k) => {\r\n      dailyTotal += + cur[k];\r\n      return dailyTotal;\r\n    }, 0);\r\n    ret.push(t);\r\n    return ret;\r\n  }, []);\r\n\r\n  // accessors\r\n  const y = d => d.material;\r\n\r\n  // scales\r\n  const xScale = scaleLinear({\r\n    domain: [\r\n      0,\r\n      Math.max(...allMaterialTotals)\r\n    ],\r\n    nice: true\r\n  });\r\n  const color = scaleOrdinal({\r\n    domain: keys,\r\n    range: [purple1, purple2, purple3]\r\n  });\r\n  // const color = d => {\r\n  // range: d => {\r\n  //   console.log('hmm', d);\r\n  //   return 'green';\r\n  // }\r\n  //   console.log(d);\r\n  //   return '#ff0000';\r\n  // }\r\n\r\n  let tooltipTimeout;\r\n\r\n\r\n\r\n  return (<ParentSize>\r\n    {\r\n      ({width: w}) => {\r\n        const xMax = w - margin.left - margin.right;\r\n        xScale.rangeRound([0, xMax]);\r\n        // w = w- 100;\r\n        var previousY = 0;\r\n\r\n        const chartHeight = (selectedMaterials.length * barHeight) + headerFooterHeight\r\n        + (selectedMaterialsGroupedByType.length * 20);\r\n\r\n        return (<div className={styles.container} style={{\r\n            position: 'relative'\r\n          }}>\r\n\r\n          <svg width={w} height={chartHeight}>\r\n            <rect width={w} height={chartHeight} fill={bg} rx={14}/>\r\n            <Group top={margin.top} left={margin.left}>\r\n              {selectedMaterialsGroupedByType.map(sm => {\r\n                const height = headerFooterHeight + (barHeight * sm.values.length);\r\n                const yMax = height - margin.top - margin.bottom;\r\n                const yScale = scaleBand({domain:  sm.values.map(y), padding: 0.2});\r\n                yScale.rangeRound([yMax, 0]);\r\n                const yOffset = previousY;\r\n                previousY += yMax;\r\n\r\n                return (\r\n                  <Group top={yOffset}>\r\n                    <line x1={-margin.left+margin.smallGap} y1=\"0\" x2={w-margin.left-2*margin.smallGap} y2=\"0\" stroke=\"#C9CDF2\" stroke-width=\"3\" stroke-dasharray=\"0 6\" stroke-linecap=\"round\" />\r\n                    <BarStackHorizontal data={sm.values} keys={keys} height={yMax} y={y} xScale={xScale} yScale={yScale} color={color}>\r\n                    {\r\n                      barStacks => {\r\n                        return barStacks.map(barStack => {\r\n                          return barStack.bars.map(bar => {\r\n                            var barColor = bar.color;\r\n                            if(colorBy === \"material\" && bar.bar && bar.bar.data && bar.bar.data.material) {\r\n                              barColor = metaData.materialColors[bar.bar.data.material] || bar.color;\r\n                            }\r\n                            return (<rect key={`barstack-horizontal-${barStack.index}-${bar.index}`} x={bar.x} y={bar.y} width={bar.width} height={bar.height} fill={barColor} onClick={event => {\r\n                                if (!events)\r\n                                  return;\r\n                                alert(`clicked: ${JSON.stringify(bar)}`);\r\n                              }} onMouseLeave={event => {\r\n                                tooltipTimeout = setTimeout(() => {\r\n                                  hideTooltip();\r\n                                }, 300);\r\n                              }} onMouseMove={event => {\r\n                                if (tooltipTimeout)\r\n                                  clearTimeout(tooltipTimeout);\r\n                                const top = bar.y + margin.top + barHeight + 10;\r\n                                const left = bar.x + bar.width/2 + margin.left - toolTipWidth/2;\r\n                                showTooltip({tooltipData: bar, tooltipTop: top, tooltipLeft: left});\r\n                              }}/>);\r\n                          });\r\n                        });\r\n                      }\r\n                    }\r\n                  </BarStackHorizontal>\r\n                  <AxisLeft\r\n                    hideAxisLine={true} hideTicks={true} scale={yScale} /* tickFormat={formatDate} */\r\n                    stroke={textColor} tickStroke={textColor}\r\n                    tickLabelProps={(value, index) => ({fill: textColor, fontSize: 11, textAnchor: 'end', dy: '0.33em'})}\r\n                  />\r\n                  <Text\r\n                    textAnchor=\"start\"\r\n                    verticalAnchor=\"start\"\r\n                    fontSize={14}\r\n                    width={50}\r\n                    x={-margin.left + margin.smallGap} y={(barHeight * sm.values.length)/2}\r\n                  >{sm.key}</Text>\r\n                </Group>\r\n                )\r\n              })}\r\n\r\n              <line x1={-margin.left+margin.smallGap} y1={previousY} x2={w-margin.left-2*margin.smallGap} y2={previousY} stroke=\"#C9CDF2\" stroke-width=\"3\" stroke-dasharray=\"0 6\" stroke-linecap=\"round\" />\r\n              <AxisBottom top={(previousY + 10)} scale={xScale} stroke={textColor} tickStroke={textColor} hideAxisLine={true} hideTicks={true} label={xAxisLabel} tickLabelProps={(value, index) => ({fill: textColor, fontSize: 11, textAnchor: 'middle'})} labelProps={{\r\n                  fontSize: 18,\r\n                  fill: textColor\r\n                }}/>\r\n            </Group>\r\n          </svg>\r\n          <div style={{\r\n              position: 'absolute',\r\n              top: margin.top / 2 - 10,\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              fontSize: '14px'\r\n            }}>\r\n          </div>\r\n          {\r\n            tooltipOpen && (<Tooltip top={tooltipTop} left={tooltipLeft} style={{\r\n                minWidth: 60,\r\n                height: toolTipHeight,\r\n                width: toolTipWidth,\r\n                backgroundColor: 'rgba(0,0,0,0.9)',\r\n                color: 'white'\r\n              }}>\r\n              <div className={styles.tooltipContainer}>\r\n                <div style={{\r\n                    color: color(tooltipData.key)\r\n                  }}>\r\n                  <strong>{tooltipData.key}</strong>\r\n                </div>\r\n                <div>{tooltipData.bar.data[tooltipData.key]}</div>\r\n                <div>\r\n                  <small>{y(tooltipData.bar.data)}</small>\r\n                </div>\r\n              </div>\r\n            </Tooltip>)\r\n          }\r\n        </div>);\r\n      }\r\n    }\r\n  </ParentSize>);\r\n\r\n});\r\n","import Papa from 'papaparse';\r\nimport dataGWP from './gwp.csv';\r\nimport dataAllImpacts from './allimpacts.csv';\r\n\r\nconst PAPAPARSE_CONFIG = {\r\n  download: true,\r\n  header: true,\r\n  skipEmptyLines: true\r\n};\r\n\r\nconst metaData = {\r\n  materialColors: {\r\n    Granite:\"#f99f2d\",\r\n    Limestone:\"#febd2a\",\r\n    Brick:\"#ffd743\",\r\n    InsMetPanel:\"#ea5625\",\r\n    GFRC:\"#700000\",\r\n    ACM:\"#920000\",\r\n    Terracotta:\"#b00000\",\r\n    PhenResin:\"#c80000\",\r\n    FiberCement:\"#e20000\",\r\n    Zinc:\"#ff1515\",\r\n    Granite1:\"#ff1515\",\r\n    Limestone1:\"#ff6161\",\r\n    Steel:\"#ff8989\",\r\n    Wood:\"#ffb7b7\"\r\n  },\r\n\r\n  impactColors: {\r\n    impact1:\"#f99f2d\",\r\n    impact2:\"#febd2a\",\r\n    impact3:\"#ffd743\",\r\n  },\r\n\r\n  materialOrdering: {\r\n    Wood: 14,\r\n    Steel: 13,\r\n    Limestone1: 12,\r\n    Granite1: 11,\r\n    Zinc: 10,\r\n    FiberCement: 9,\r\n    PhenResin: 8,\r\n    Terracotta: 7,\r\n    ACM: 6,\r\n    GFRC: 5,\r\n    InsMetPanel: 4,\r\n    Brick: 3,\r\n    Limestone: 2,\r\n    Granite: 1\r\n  },\r\n\r\n  typeOrdering: {\r\n    \"Masonry Veneer\": 1,\r\n    \"Face Sealed\": 2,\r\n    \"Rainscreen\": 3\r\n  }\r\n};\r\n\r\nexport default {\r\n  metaData: metaData,\r\n\r\n  allImpactsData: (cb) => {\r\n    Papa.parse(dataAllImpacts, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         var resultData = results.data.map(d => {\r\n           return { material: d.material, type: d.type, impact1: parseFloat(d.impact1), impact2: parseFloat(d.impact2), impact3: parseFloat(d.impact3) }\r\n         });\r\n         resultData = resultData.sort((a, b) => {\r\n           const orderA = metaData.materialOrdering[a.material] ? metaData.materialOrdering[a.material] : 1000;\r\n           const orderB = metaData.materialOrdering[b.material] ? metaData.materialOrdering[b.material] : 1000;\r\n           return orderA < orderB ? -1 : 1;\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  },\r\n\r\n  gwpData: (cb) => {\r\n    Papa.parse(dataGWP, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         const resultData = results.data.map(d => {\r\n           return { material: d.material, type: d.type, value: parseFloat(d.value) }\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  }\r\n};\r\n","/* https://codesandbox.io/s/multiselect-checkboxes-oennn */\r\nimport React, { PureComponent } from \"react\";\r\nimport styles from './css/MaterialList.module.scss';\r\n\r\nexport default class MaterialList extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.materials.map(material => { return { label: material, id: material }}),\r\n      selectedItems: props.initialSelectedMaterials\r\n    };\r\n\r\n    this.listEl = null;\r\n    this.handleSelectItem = this.handleSelectItem.bind(this);\r\n  }\r\n\r\n  handleSelectItem(e) {\r\n    const { value } = e.target;\r\n    const nextValue = this.getNextValue(value);\r\n\r\n    this.setState({ selectedItems: nextValue });\r\n    this.props.updateSelectedMaterials(nextValue);\r\n  }\r\n\r\n  handleSelectAll(e) {\r\n    this.setState({ selectedItems: this.props.materials });\r\n    this.props.updateSelectedMaterials(this.props.materials);\r\n  }\r\n\r\n  getNextValue(value) {\r\n    const { selectedItems } = this.state;\r\n\r\n    // if it's already in there, remove it, otherwise append it\r\n    return selectedItems.includes(value)\r\n      ? selectedItems.filter(item => item !== value)\r\n      : [...selectedItems, value];\r\n  }\r\n\r\n  renderItems() {\r\n    const { items, selectedItems } = this.state;\r\n    return items.map(item => {\r\n      const { id, label } = item;\r\n\r\n      const materialColor = this.props.metaData.materialColors[id] ? this.props.metaData.materialColors[id] : '#000000';\r\n\r\n      return (\r\n        <li key={id} className={styles.material}>\r\n          <div className={styles.materialGraphic} style={{backgroundColor: materialColor}}></div>\r\n          <input\r\n            onChange={this.handleSelectItem}\r\n            type=\"checkbox\"\r\n            checked={selectedItems.includes(id)}\r\n            value={id}\r\n            id={`item-${id}`}\r\n          />\r\n          <label htmlFor={`item-${id}`}>{label}</label>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <button onClick={e => this.handleSelectAll.bind(this)(e)}>Select All</button>\r\n        <ul ref={node => (this.listEl = node)}>{this.renderItems()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport StackedBarChart from './StackedBarChart';\nimport LoadData from './data/LoadData';\nimport MaterialList from './MaterialList';\nimport './css/Main.scss';\nimport styles from './css/App.module.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartType: \"GWP\",\n      allImpactsData: [],\n      gwpData: [],\n      materials: [],\n      selectedMaterials: []\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    LoadData.allImpactsData(data => {\n      const materials = data.map(d => d.material);\n      console.log(data, materials);\n      this.setState({\n        allImpactsData: data,\n        materials: materials,\n        selectedMaterials: materials\n      });\n    });\n    LoadData.gwpData(data => this.setState({ gwpData: data }));\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    }, () => {\n      console.log('new state: ', this.state);\n    });\n  }\n\n  updateSelectedMaterials(newSelectedMaterials) {\n    this.setState({\n      selectedMaterials: newSelectedMaterials\n    })\n  }\n\n  render() {\n    const allImpactsDataSelectedMaterialsOnly = this.state.allImpactsData.filter(d => this.state.selectedMaterials.includes(d.material));\n    const gwpDataSelectedMaterialsOnly = this.state.gwpData.filter(d => this.state.selectedMaterials.includes(d.material));\n\n    return (\n      <div className=\"App\">\n          <form>\n            <div className={styles.topcontrols}>\n              <div className={styles.inputgroup}>\n                <h3>CHART TYPE</h3>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"GWP\" value=\"GWP\" name=\"chartType\" checked={this.state.chartType === \"GWP\"} onChange={this.handleInputChange} />\n                    <label for=\"fGWP\">Global Warming Potential</label>\n                  </div>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"allImpacts\" name=\"chartType\" value=\"allImpacts\" checked={this.state.chartType === \"allImpacts\"} onChange={this.handleInputChange} />\n                    <label htmlFor=\"allImpacts\">All Impacts</label>\n                  </div>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"LCS\" value=\"LCS\" name=\"chartType\" checked={this.state.chartType === \"LCS\"} onChange={this.handleInputChange} />\n                    <label for=\"LCS\">Life Cycle Stage</label>\n                  </div>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"MB\" value=\"MB\" name=\"chartType\" checked={this.state.chartType === \"MB\"} onChange={this.handleInputChange} />\n                    <label for=\"MB\">Material Breakdown</label>\n                  </div>\n              </div>\n\n              <div className={styles.inputgroup}>\n                <h3>LIFESPAN</h3>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"tenY\" name=\"lifeSpan\" value=\"tenY\" checked=\"checked\" />\n                  <label for=\"tenY\">10 Year (No Mod D.)</label>\n                </div>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"sixty1\" name=\"lifeSpan\" value=\"sixty1\" />\n                  <label for=\"sixty1\">60 Year (With Mod D)</label>\n                </div>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"sixty2\" name=\"lifeSpan\" value=\"sixty2\" />\n                  <label for=\"sixty2\">60 Year (No Mod D)</label>\n                </div>\n              </div>\n\n              <div className={styles.inputgroup}>\n                <h3>BIOGENIC CARBON</h3>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"yBio\" name=\"biogenicCarbon\" value=\"yBio\" checked=\"checked\" />\n                  <label for=\"yBio\">With Biogenic Carbon</label>\n                </div>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"nBio\" name=\"biogenicCarbon\" value=\"nBio\" />\n                  <label for=\"nBio\">No Biogenic Carbon</label>\n                </div>\n              </div>\n            </div>\n\n            {this.state.materials.length > 0 &&\n              <div className={styles.sidebar}>\n                <MaterialList\n                  materials={this.state.materials}\n                  updateSelectedMaterials={this.updateSelectedMaterials.bind(this)}\n                  initialSelectedMaterials={this.state.selectedMaterials}\n                  metaData={LoadData.metaData}\n                />\n              </div>\n             }\n\n        </form>\n\n        <div className={styles.chartContainer}>\n        {this.state.chartType === \"allImpacts\" && allImpactsDataSelectedMaterialsOnly.length > 0 && <StackedBarChart\n          selectedMaterials={allImpactsDataSelectedMaterialsOnly}\n          allMaterials={this.state.allImpactsData}\n          metaData={LoadData.metaData}\n          barHeight={40}\n          xAxisLabel=\"% of Total\"\n        />}\n\n        {this.state.chartType === \"GWP\" && this.state.gwpData.length > 0 && <StackedBarChart\n          selectedMaterials={gwpDataSelectedMaterialsOnly}\n          allMaterials={this.state.gwpData}\n          metaData={LoadData.metaData}\n          barHeight={40}\n          xAxisLabel=\"kg CO2eq\"\n          colorBy=\"material\"\n        />}\n        </div>\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"material\":\"MaterialList_material__2gb4l\",\"materialGraphic\":\"MaterialList_materialGraphic__1d0EC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StackedBarChart_container__2dKkZ\",\"tooltipContainer\":\"StackedBarChart_tooltipContainer__3Pank\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topcontrols\":\"App_topcontrols__k3zXc\",\"inputgroup\":\"App_inputgroup__1uaiG\",\"inputitem\":\"App_inputitem__1lM4C\",\"sidebar\":\"App_sidebar__vAB4e\",\"chartContainer\":\"App_chartContainer__2DarT\"};","module.exports = __webpack_public_path__ + \"static/media/gwp.049df147.csv\";","module.exports = __webpack_public_path__ + \"static/media/allimpacts.766fd663.csv\";"],"sourceRoot":""}