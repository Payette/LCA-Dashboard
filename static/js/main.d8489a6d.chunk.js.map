{"version":3,"sources":["data/gwp.csv","data/allimpacts.csv","HorizontalBarChart.js","StackedBarChart.js","data/LoadData.js","MaterialList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","valueData","d","frequency","width","height","data","horizontalMax","horizontalScale","scaleLinear","rangeRound","domain","Math","max","map","GradientTealBlue","id","fill","rx","Group","top","i","letter","categoryData","barWidth","barY","Bar","key","x","y","onClick","event","alert","JSON","stringify","Object","values","withTooltip","tooltipTimeout","barHeight","selectedMaterials","allMaterials","xAxisLabel","events","margin","left","right","bottom","tooltipOpen","tooltipLeft","tooltipTop","tooltipData","hideTooltip","showTooltip","length","yMax","keys","filter","allMaterialTotals","reduce","ret","cur","t","dailyTotal","k","push","material","xScale","nice","yScale","scaleBand","padding","color","scaleOrdinal","range","ParentSize","w","xMax","style","position","BarStackHorizontal","barStacks","barStack","bars","bar","index","onMouseLeave","setTimeout","onMouseMove","clearTimeout","AxisLeft","hideAxisLine","hideTicks","scale","stroke","tickStroke","tickLabelProps","value","fontSize","textAnchor","dy","AxisBottom","label","labelProps","display","justifyContent","direction","labelMargin","Tooltip","minWidth","backgroundColor","PAPAPARSE_CONFIG","download","header","skipEmptyLines","cb","Papa","parse","dataAllImpacts","complete","results","file","Array","isArray","resultData","impact1","parseFloat","impact2","impact3","console","error","errors","dataGWP","Variable","Attended","MaterialList","props","log","initialSelectedMaterials","state","items","materials","reverse","selectedItems","listEl","handleSelectItem","bind","e","target","nextValue","this","getNextValue","setState","updateSelectedMaterials","includes","item","onChange","type","checked","htmlFor","handleSelectAll","ref","node","renderItems","PureComponent","App","chartType","allImpactsData","gwpData","handleInputChange","LoadData","name","newSelectedMaterials","allImpactsDataSelectedMaterialsOnly","className","for","StackedBarChart","HorizontalBarChart","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8489a6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gwp.7df9e12d.csv\";","module.exports = __webpack_public_path__ + \"static/media/allimpacts.38f595ea.csv\";","import React from 'react';\r\nimport { Bar } from '@vx/shape';\r\nimport { Group } from '@vx/group';\r\nimport { GradientTealBlue } from '@vx/gradient';\r\nimport { scaleLinear } from '@vx/scale';\r\n\r\n// accessors\r\nconst categoryData = d => d.letter;\r\nconst valueData = d => +d.frequency * 100;\r\n\r\nexport default ({ width, height, data }) => {\r\n  // bounds\r\n  const horizontalPadding = 60;\r\n  const horizontalMax = width - 2*horizontalPadding;\r\n\r\n  // scales\r\n  const horizontalScale = scaleLinear({\r\n    rangeRound: [horizontalMax, 0],\r\n    domain: [0, Math.max(...data.map(valueData))]\r\n  });\r\n\r\n  return (\r\n    <svg width={width} height={height}>\r\n      <GradientTealBlue id=\"teal\" />\r\n      <rect width={width} height={height} fill={\"url(#teal)\"} rx={14} />\r\n      <Group top={40}>\r\n        {data.map((d, i) => {\r\n          const letter = categoryData(d);\r\n          const barHeight = 20;\r\n          const barWidth = horizontalMax - horizontalScale(valueData(d));\r\n          const barY = (barHeight + 5) * i;\r\n          const barX = horizontalPadding;\r\n          return (\r\n            <Bar\r\n              key={`bar-${letter}`}\r\n              x={barX}\r\n              y={barY}\r\n              width={barWidth}\r\n              height={barHeight}\r\n              fill=\"rgba(23, 233, 217, .5)\"\r\n              onClick={event => {\r\n                alert(`clicked: ${JSON.stringify(Object.values(d))}`);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </Group>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {BarStackHorizontal} from '@vx/shape';\r\nimport {Group} from '@vx/group';\r\nimport {AxisBottom, AxisLeft} from '@vx/axis';\r\nimport {scaleBand, scaleLinear, scaleOrdinal} from '@vx/scale';\r\nimport {withTooltip, Tooltip} from '@vx/tooltip';\r\nimport {LegendOrdinal} from '@vx/legend';\r\nimport {ParentSize} from '@vx/responsive';\r\n\r\nexport default withTooltip(({\r\n  barHeight,\r\n  selectedMaterials,\r\n  allMaterials,\r\n  xAxisLabel,\r\n  events = false,\r\n  margin = {\r\n    top: 40,\r\n    left: 100,\r\n    right: 40,\r\n    bottom: 100\r\n  },\r\n  tooltipOpen,\r\n  tooltipLeft,\r\n  tooltipTop,\r\n  tooltipData,\r\n  hideTooltip,\r\n  showTooltip\r\n}) => {\r\n\r\n\r\n  // bounds\r\n  // const xMax = width - margin.left - margin.right;\r\n  const headerFooterHeight = 160;\r\n  const height = headerFooterHeight + (barHeight * selectedMaterials.length);\r\n  const yMax = height - margin.top - margin.bottom;\r\n\r\n  const purple1 = '#6c5efb';\r\n  const purple2 = '#c998ff';\r\n  const purple3 = '#a44afe';\r\n  const bg = '#eaedff';\r\n\r\n  const keys = Object.keys(selectedMaterials[0]).filter(d => d !== 'material');\r\n\r\n  const allMaterialTotals = allMaterials.reduce((ret, cur) => {\r\n    const t = keys.reduce((dailyTotal, k) => {\r\n      dailyTotal += + cur[k];\r\n      return dailyTotal;\r\n    }, 0);\r\n    ret.push(t);\r\n    return ret;\r\n  }, []);\r\n\r\n  // accessors\r\n  const y = d => d.material;\r\n\r\n  // scales\r\n  const xScale = scaleLinear({\r\n    domain: [\r\n      0,\r\n      Math.max(...allMaterialTotals)\r\n    ],\r\n    nice: true\r\n  });\r\n  const yScale = scaleBand({domain: selectedMaterials.map(y), padding: 0.2});\r\n  const color = scaleOrdinal({\r\n    domain: keys,\r\n    range: [purple1, purple2, purple3]\r\n  });\r\n\r\n  let tooltipTimeout;\r\n\r\n  yScale.rangeRound([yMax, 0]);\r\n\r\n  return (<ParentSize>\r\n    {\r\n      ({width: w}) => {\r\n        const xMax = w - margin.left - margin.right;\r\n        xScale.rangeRound([0, xMax]);\r\n        // w = w- 100;\r\n\r\n        return (<div style={{\r\n            position: 'relative'\r\n          }}>\r\n\r\n          <svg width={w} height={height}>\r\n            <rect width={w} height={height} fill={bg} rx={14}/>\r\n            <Group top={margin.top} left={margin.left}>\r\n              <BarStackHorizontal data={selectedMaterials} keys={keys} height={yMax} y={y} xScale={xScale} yScale={yScale} color={color}>\r\n                {\r\n                  barStacks => {\r\n                    return barStacks.map(barStack => {\r\n                      return barStack.bars.map(bar => {\r\n                        return (<rect key={`barstack-horizontal-${barStack.index}-${bar.index}`} x={bar.x} y={bar.y} width={bar.width} height={bar.height} fill={bar.color} onClick={event => {\r\n                            if (!events)\r\n                              return;\r\n                            alert(`clicked: ${JSON.stringify(bar)}`);\r\n                          }} onMouseLeave={event => {\r\n                            tooltipTimeout = setTimeout(() => {\r\n                              hideTooltip();\r\n                            }, 300);\r\n                          }} onMouseMove={event => {\r\n                            if (tooltipTimeout)\r\n                              clearTimeout(tooltipTimeout);\r\n                            const top = bar.y + margin.top;\r\n                            const left = bar.x + bar.width + margin.left;\r\n                            showTooltip({tooltipData: bar, tooltipTop: top, tooltipLeft: left});\r\n                          }}/>);\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n              </BarStackHorizontal>\r\n              <AxisLeft hideAxisLine={true} hideTicks={true} scale={yScale} /* tickFormat={formatDate} */\n\n                stroke={purple3} tickStroke={purple3} tickLabelProps={(value, index) => ({fill: purple3, fontSize: 11, textAnchor: 'end', dy: '0.33em'})}/>\r\n              <AxisBottom top={yMax} scale={xScale} stroke={purple3} tickStroke={purple3} hideAxisLine={true} hideTicks={true} label={xAxisLabel} tickLabelProps={(value, index) => ({fill: purple3, fontSize: 11, textAnchor: 'middle'})} labelProps={{\r\n                  fontSize: 18,\r\n                  fill: purple3\r\n                }}/>\r\n            </Group>\r\n          </svg>\r\n          <div style={{\r\n              position: 'absolute',\r\n              top: margin.top / 2 - 10,\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              fontSize: '14px'\r\n            }}>\r\n            <LegendOrdinal scale={color} direction=\"row\" labelMargin=\"0 15px 0 0\"/>\r\n          </div>\r\n          {\r\n            tooltipOpen && (<Tooltip top={tooltipTop} left={tooltipLeft} style={{\r\n                minWidth: 60,\r\n                backgroundColor: 'rgba(0,0,0,0.9)',\r\n                color: 'white'\r\n              }}>\r\n              <div style={{\r\n                  color: color(tooltipData.key)\r\n                }}>\r\n                <strong>{tooltipData.key}</strong>\r\n              </div>\r\n              <div>{tooltipData.bar.data[tooltipData.key]}</div>\r\n              <div>\r\n                <small>{y(tooltipData.bar.data)}</small>\r\n              </div>\r\n            </Tooltip>)\r\n          }\r\n        </div>);\r\n      }\r\n    }\r\n  </ParentSize>);\r\n\r\n});\r\n","import Papa from 'papaparse';\r\nimport dataGWP from './gwp.csv';\r\nimport dataAllImpacts from './allimpacts.csv';\r\n\r\nconst PAPAPARSE_CONFIG = {\r\n  download: true,\r\n  header: true,\r\n  skipEmptyLines: true\r\n};\r\n\r\nexport default {\r\n  allImpactsData: (cb) => {\r\n    Papa.parse(dataAllImpacts, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         const resultData = results.data.map(d => {\r\n           return { material: d.material, impact1: parseFloat(d.impact1), impact2: parseFloat(d.impact2), impact3: parseFloat(d.impact3) }\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  },\r\n\r\n  gwpData: (cb) => {\r\n    Papa.parse(dataGWP, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         const resultData = results.data.map(d => {\r\n           return { letter: d.Variable, frequency: parseFloat(d.Attended) }\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  }\r\n};\r\n","/* https://codesandbox.io/s/multiselect-checkboxes-oennn */\r\nimport React, { PureComponent } from \"react\";\r\n\r\nexport default class MaterialList extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(props.initialSelectedMaterials);\r\n\r\n    this.state = {\r\n      items: props.materials.map(material => { return { label: material, id: material }}).reverse(),\r\n      selectedItems: props.initialSelectedMaterials\r\n    };\r\n\r\n    this.listEl = null;\r\n    this.handleSelectItem = this.handleSelectItem.bind(this);\r\n  }\r\n\r\n  handleSelectItem(e) {\r\n    const { value } = e.target;\r\n    const nextValue = this.getNextValue(value);\r\n\r\n    this.setState({ selectedItems: nextValue });\r\n    this.props.updateSelectedMaterials(nextValue);\r\n  }\r\n\r\n  handleSelectAll(e) {\r\n    this.setState({ selectedItems: this.props.materials });\r\n    this.props.updateSelectedMaterials(this.props.materials);\r\n  }\r\n\r\n  getNextValue(value) {\r\n    const { selectedItems } = this.state;\r\n\r\n    // if it's already in there, remove it, otherwise append it\r\n    return selectedItems.includes(value)\r\n      ? selectedItems.filter(item => item !== value)\r\n      : [...selectedItems, value];\r\n  }\r\n\r\n  renderItems() {\r\n    const { items, selectedItems } = this.state;\r\n    return items.map(item => {\r\n      const { id, label } = item;\r\n      return (\r\n        <li key={id}>\r\n          <input\r\n            onChange={this.handleSelectItem}\r\n            type=\"checkbox\"\r\n            checked={selectedItems.includes(id)}\r\n            value={id}\r\n            id={`item-${id}`}\r\n          />\r\n          <label htmlFor={`item-${id}`}>{label}</label>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={e => this.handleSelectAll.bind(this)(e)}>Select All</button>\r\n        <ul ref={node => (this.listEl = node)}>{this.renderItems()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport HorizontalBarChart from './HorizontalBarChart';\nimport StackedBarChart from './StackedBarChart';\nimport LoadData from './data/LoadData';\nimport MaterialList from './MaterialList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartType: \"allImpacts\",\n      allImpactsData: [],\n      gwpData: [],\n      materials: [],\n      selectedMaterials: []\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    LoadData.allImpactsData(data => {\n      const materials = data.map(d => d.material);\n      this.setState({\n        allImpactsData: data,\n        materials: materials,\n        selectedMaterials: materials\n      });\n    });\n    LoadData.gwpData(data => this.setState({ gwpData: data }));\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    }, () => {\n      console.log('new state: ', this.state);\n    });\n  }\n\n  updateSelectedMaterials(newSelectedMaterials) {\n    this.setState({\n      selectedMaterials: newSelectedMaterials\n    })\n  }\n\n  render() {\n    const allImpactsDataSelectedMaterialsOnly = this.state.allImpactsData.filter(d => this.state.selectedMaterials.includes(d.material));\n\n    return (\n      <div className=\"App\">\n        <h1>LCA Tool</h1>\n\n          <form>\n            <p>CHART TYPE:</p>\n            <input type=\"radio\" id=\"allImpacts\" name=\"chartType\" value=\"allImpacts\" checked={this.state.chartType === \"allImpacts\"} onChange={this.handleInputChange} />\n            <label htmlFor=\"allImpacts\">All Impacts</label>\n            <input type=\"radio\" id=\"GWP\" value=\"GWP\" name=\"chartType\" checked={this.state.chartType === \"GWP\"} onChange={this.handleInputChange} />\n            <label for=\"fGWP\">Global Warming Potential</label>\n            <input type=\"radio\" id=\"LCS\" value=\"LCS\" name=\"chartType\" checked={this.state.chartType === \"LCS\"} onChange={this.handleInputChange} />\n            <label for=\"LCS\">Life Cycle Stage</label>\n            <input type=\"radio\" id=\"MB\" value=\"MB\" name=\"chartType\" checked={this.state.chartType === \"MB\"} onChange={this.handleInputChange} />\n            <label for=\"MB\">Material Breakdown</label>\n\n            <p>LIFESPAN:</p>\n            <input type=\"radio\" id=\"tenY\" name=\"lifeSpan\" value=\"tenY\" checked=\"checked\" />\n            <label for=\"tenY\">10 Year (No Mod D.)</label>\n            <input type=\"radio\" id=\"sixty1\" name=\"lifeSpan\" value=\"sixty1\" />\n            <label for=\"sixty1\">60 Year (With Mod D)</label>\n            <input type=\"radio\" id=\"sixty2\" name=\"lifeSpan\" value=\"sixty2\" />\n            <label for=\"sixty2\">60 Year (No Mod D)</label>\n\n            <p>BIOGENIC CARBON:</p>\n            <input type=\"radio\" id=\"yBio\" name=\"biogenicCarbon\" value=\"yBio\" checked=\"checked\" />\n            <label for=\"yBio\">With Biogenic Carbon</label>\n            <input type=\"radio\" id=\"nBio\" name=\"biogenicCarbon\" value=\"nBio\" />\n            <label for=\"nBio\">No Biogenic Carbon</label>\n\n            {this.state.materials.length > 0 &&\n              <MaterialList\n                materials={this.state.materials}\n                updateSelectedMaterials={this.updateSelectedMaterials.bind(this)}\n                initialSelectedMaterials={this.state.selectedMaterials}\n              />}\n\n        </form>\n\n        <div className=\"chartContainer\">\n        {this.state.chartType === \"allImpacts\" && allImpactsDataSelectedMaterialsOnly.length > 0 && <StackedBarChart\n          selectedMaterials={allImpactsDataSelectedMaterialsOnly}\n          allMaterials={this.state.allImpactsData}\n          barHeight={40}\n          xAxisLabel=\"kg CO2eq ??\"\n        />}\n\n        {this.state.chartType === \"GWP\" && this.state.gwpData.length > 0 && <HorizontalBarChart\n          data={this.state.gwpData}\n          height={600}\n          xAxisLabel=\"kg CO2eq\"\n        />}\n        </div>\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}