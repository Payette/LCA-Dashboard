{"version":3,"sources":["HorizontalBarChart.js","StackedBarChart.js","data/LoadData.js","MaterialList.js","App.js","serviceWorker.js","index.js","css/MaterialList.module.scss","css/StackedBarChart.module.scss","css/App.module.scss","data/gwp.csv","data/allimpacts.csv"],"names":["valueData","d","frequency","width","height","data","horizontalMax","horizontalScale","scaleLinear","rangeRound","domain","Math","max","map","GradientTealBlue","id","fill","rx","Group","top","i","letter","categoryData","barWidth","barY","Bar","key","x","y","onClick","event","alert","JSON","stringify","Object","values","withTooltip","tooltipTimeout","barHeight","selectedMaterials","metaData","allMaterials","xAxisLabel","events","margin","left","right","bottom","tooltipOpen","tooltipLeft","tooltipTop","tooltipData","hideTooltip","showTooltip","selectedMaterialsGroupedByType","d3","type","entries","sort","a","b","materialOrdering","material","typeOrdering","keys","filter","allMaterialTotals","reduce","ret","cur","t","dailyTotal","k","push","xScale","nice","color","scaleOrdinal","range","ParentSize","w","xMax","previousY","chartHeight","length","className","styles","container","style","position","sm","yMax","yScale","scaleBand","padding","yOffset","BarStackHorizontal","barStacks","barStack","bars","bar","index","onMouseLeave","setTimeout","onMouseMove","clearTimeout","AxisLeft","hideAxisLine","hideTicks","scale","stroke","tickStroke","tickLabelProps","value","fontSize","textAnchor","dy","AxisBottom","label","labelProps","display","justifyContent","direction","labelMargin","Tooltip","minWidth","backgroundColor","tooltipContainer","PAPAPARSE_CONFIG","download","header","skipEmptyLines","materialColors","Granite","Limestone","Brick","InsMetPanel","GFRC","ACM","Terracotta","PhenResin","FiberCement","Zinc","Granite1","Limestone1","Steel","Wood","impactColors","impact1","impact2","impact3","allImpactsData","cb","Papa","parse","dataAllImpacts","complete","results","file","Array","isArray","resultData","parseFloat","console","error","errors","gwpData","dataGWP","Variable","Attended","MaterialList","props","state","items","materials","selectedItems","initialSelectedMaterials","listEl","handleSelectItem","bind","e","target","nextValue","this","getNextValue","setState","updateSelectedMaterials","includes","item","materialColor","materialGraphic","onChange","checked","htmlFor","handleSelectAll","ref","node","renderItems","PureComponent","App","chartType","handleInputChange","LoadData","log","name","newSelectedMaterials","allImpactsDataSelectedMaterialsOnly","topcontrols","inputgroup","inputitem","for","sidebar","chartContainer","StackedBarChart","HorizontalBarChart","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e7b16582.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Bar } from '@vx/shape';\r\nimport { Group } from '@vx/group';\r\nimport { GradientTealBlue } from '@vx/gradient';\r\nimport { scaleLinear } from '@vx/scale';\r\n\r\n// accessors\r\nconst categoryData = d => d.letter;\r\nconst valueData = d => +d.frequency * 100;\r\n\r\nexport default ({ width, height, data }) => {\r\n  // bounds\r\n  const horizontalPadding = 60;\r\n  const horizontalMax = width - 2*horizontalPadding;\r\n\r\n  // scales\r\n  const horizontalScale = scaleLinear({\r\n    rangeRound: [horizontalMax, 0],\r\n    domain: [0, Math.max(...data.map(valueData))]\r\n  });\r\n\r\n  return (\r\n    <svg width={width} height={height}>\r\n      <GradientTealBlue id=\"teal\" />\r\n      <rect width={width} height={height} fill={\"url(#teal)\"} rx={14} />\r\n      <Group top={40}>\r\n        {data.map((d, i) => {\r\n          const letter = categoryData(d);\r\n          const barHeight = 20;\r\n          const barWidth = horizontalMax - horizontalScale(valueData(d));\r\n          const barY = (barHeight + 5) * i;\r\n          const barX = horizontalPadding;\r\n          return (\r\n            <Bar\r\n              key={`bar-${letter}`}\r\n              x={barX}\r\n              y={barY}\r\n              width={barWidth}\r\n              height={barHeight}\r\n              fill=\"rgba(23, 233, 217, .5)\"\r\n              onClick={event => {\r\n                alert(`clicked: ${JSON.stringify(Object.values(d))}`);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </Group>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {BarStackHorizontal} from '@vx/shape';\r\nimport {Group} from '@vx/group';\r\nimport {AxisBottom, AxisLeft} from '@vx/axis';\r\nimport {scaleBand, scaleLinear, scaleOrdinal} from '@vx/scale';\r\nimport {withTooltip, Tooltip} from '@vx/tooltip';\r\nimport {LegendOrdinal} from '@vx/legend';\r\nimport {ParentSize} from '@vx/responsive';\r\nimport * as d3 from 'd3';\r\nimport styles from './css/StackedBarChart.module.scss';\r\n\r\nexport default withTooltip(({\r\n  barHeight,\r\n  selectedMaterials,\r\n  metaData,\r\n  allMaterials,\r\n  xAxisLabel,\r\n  events = false,\r\n  margin = {\r\n    top: 40,\r\n    left: 100,\r\n    right: 40,\r\n    bottom: 100\r\n  },\r\n  tooltipOpen,\r\n  tooltipLeft,\r\n  tooltipTop,\r\n  tooltipData,\r\n  hideTooltip,\r\n  showTooltip\r\n}) => {\r\n\r\n  const selectedMaterialsGroupedByType = d3.nest()\r\n  .key(function(d) { return d.type })\r\n  .entries(selectedMaterials.sort((a, b) => {\r\n    const orderA = metaData.materialOrdering[a.material] ? metaData.materialOrdering[a.material] : 1000;\r\n    const orderB = metaData.materialOrdering[b.material] ? metaData.materialOrdering[b.material] : 1000;\r\n    return orderA < orderB ? 1 : -1;\r\n  }))\r\n  .sort((a, b) => {\r\n    const orderA = metaData.typeOrdering[a.key] ? metaData.typeOrdering[a.key] : 1000;\r\n    const orderB = metaData.typeOrdering[b.key] ? metaData.typeOrdering[b.key] : 1000;\r\n    return orderA < orderB ? -1 : 1;\r\n  });\r\n\r\n  // bounds\r\n  // const xMax = width - margin.left - margin.right;\r\n  const headerFooterHeight = 160;\r\n  // const height = headerFooterHeight + (barHeight * selectedMaterials.length);\r\n  // const yMax = height - margin.top - margin.bottom;\r\n\r\n  const purple1 = \"#f99f2d\";\r\n  const purple2 = \"#febd2a\";\r\n  const purple3 = \"#ffd743\";\r\n  const textColor = \"#000000\";\r\n  const bg = '#ffffff';\r\n\r\n  const keys = Object.keys(selectedMaterials[0]).filter(d => d !== 'material' && d !== 'type');\r\n\r\n  const allMaterialTotals = allMaterials.reduce((ret, cur) => {\r\n    const t = keys.reduce((dailyTotal, k) => {\r\n      dailyTotal += + cur[k];\r\n      return dailyTotal;\r\n    }, 0);\r\n    ret.push(t);\r\n    return ret;\r\n  }, []);\r\n\r\n  // accessors\r\n  const y = d => d.material;\r\n\r\n  // scales\r\n  const xScale = scaleLinear({\r\n    domain: [\r\n      0,\r\n      Math.max(...allMaterialTotals)\r\n    ],\r\n    nice: true\r\n  });\r\n  const color = scaleOrdinal({\r\n    domain: keys,\r\n    range: [purple1, purple2, purple3]\r\n  });\r\n\r\n  let tooltipTimeout;\r\n\r\n\r\n\r\n  return (<ParentSize>\r\n    {\r\n      ({width: w}) => {\r\n        const xMax = w - margin.left - margin.right;\r\n        xScale.rangeRound([0, xMax]);\r\n        // w = w- 100;\r\n        var previousY = 0;\r\n\r\n        const chartHeight = (selectedMaterials.length * barHeight) + headerFooterHeight\r\n        + (selectedMaterialsGroupedByType.length * 20);\r\n\r\n        return (<div className={styles.container} style={{\r\n            position: 'relative'\r\n          }}>\r\n\r\n          <svg width={w} height={chartHeight}>\r\n            <rect width={w} height={chartHeight} fill={bg} rx={14}/>\r\n            <Group top={margin.top} left={margin.left}>\r\n              {selectedMaterialsGroupedByType.map(sm => {\r\n                const height = headerFooterHeight + (barHeight * sm.values.length);\r\n                const yMax = height - margin.top - margin.bottom;\r\n                const yScale = scaleBand({domain:  sm.values.map(y), padding: 0.2});\r\n                yScale.rangeRound([yMax, 0]);\r\n                const yOffset = previousY;\r\n                previousY += yMax;\r\n\r\n                return (\r\n                  <Group top={yOffset}>\r\n                    <text>{sm.key}</text>\r\n                    <BarStackHorizontal data={sm.values} keys={keys} height={yMax} y={y} xScale={xScale} yScale={yScale} color={color}>\r\n                    {\r\n                      barStacks => {\r\n                        return barStacks.map(barStack => {\r\n                          return barStack.bars.map(bar => {\r\n                            return (<rect key={`barstack-horizontal-${barStack.index}-${bar.index}`} x={bar.x} y={bar.y} width={bar.width} height={bar.height} fill={bar.color} onClick={event => {\r\n                                if (!events)\r\n                                  return;\r\n                                alert(`clicked: ${JSON.stringify(bar)}`);\r\n                              }} onMouseLeave={event => {\r\n                                tooltipTimeout = setTimeout(() => {\r\n                                  hideTooltip();\r\n                                }, 300);\r\n                              }} onMouseMove={event => {\r\n                                if (tooltipTimeout)\r\n                                  clearTimeout(tooltipTimeout);\r\n                                const top = bar.y + margin.top;\r\n                                const left = bar.x + bar.width + margin.left;\r\n                                showTooltip({tooltipData: bar, tooltipTop: top, tooltipLeft: left});\r\n                              }}/>);\r\n                          });\r\n                        });\r\n                      }\r\n                    }\r\n                  </BarStackHorizontal>\r\n                  <AxisLeft hideAxisLine={true} hideTicks={true} scale={yScale} /* tickFormat={formatDate} */\r\n\r\n                    stroke={textColor} tickStroke={textColor} tickLabelProps={(value, index) => ({fill: textColor, fontSize: 11, textAnchor: 'end', dy: '0.33em'})}/>\r\n                </Group>\r\n                )\r\n              })}\r\n\r\n              <AxisBottom top={(chartHeight - 100)} scale={xScale} stroke={textColor} tickStroke={textColor} hideAxisLine={true} hideTicks={true} label={xAxisLabel} tickLabelProps={(value, index) => ({fill: textColor, fontSize: 11, textAnchor: 'middle'})} labelProps={{\r\n                  fontSize: 18,\r\n                  fill: textColor\r\n                }}/>\r\n            </Group>\r\n          </svg>\r\n          <div style={{\r\n              position: 'absolute',\r\n              top: margin.top / 2 - 10,\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              fontSize: '14px'\r\n            }}>\r\n            <LegendOrdinal scale={color} direction=\"row\" labelMargin=\"0 15px 0 0\"/>\r\n          </div>\r\n          {\r\n            tooltipOpen && (<Tooltip top={tooltipTop} left={tooltipLeft} style={{\r\n                minWidth: 60,\r\n                backgroundColor: 'rgba(0,0,0,0.9)',\r\n                color: 'white'\r\n              }}>\r\n              <div className={styles.tooltipContainer}>\r\n                <div style={{\r\n                    color: color(tooltipData.key)\r\n                  }}>\r\n                  <strong>{tooltipData.key}</strong>\r\n                </div>\r\n                <div>{tooltipData.bar.data[tooltipData.key]}</div>\r\n                <div>\r\n                  <small>{y(tooltipData.bar.data)}</small>\r\n                </div>\r\n              </div>\r\n            </Tooltip>)\r\n          }\r\n        </div>);\r\n      }\r\n    }\r\n  </ParentSize>);\r\n\r\n});\r\n","import Papa from 'papaparse';\r\nimport dataGWP from './gwp.csv';\r\nimport dataAllImpacts from './allimpacts.csv';\r\n\r\nconst PAPAPARSE_CONFIG = {\r\n  download: true,\r\n  header: true,\r\n  skipEmptyLines: true\r\n};\r\n\r\nconst metaData = {\r\n  materialColors: {\r\n    Granite:\"#f99f2d\",\r\n    Limestone:\"#febd2a\",\r\n    Brick:\"#ffd743\",\r\n    InsMetPanel:\"#ea5625\",\r\n    GFRC:\"#700000\",\r\n    ACM:\"#920000\",\r\n    Terracotta:\"#b00000\",\r\n    PhenResin:\"#c80000\",\r\n    FiberCement:\"#e20000\",\r\n    Zinc:\"#ff1515\",\r\n    Granite1:\"#ff1515\",\r\n    Limestone1:\"#ff6161\",\r\n    Steel:\"#ff8989\",\r\n    Wood:\"#ffb7b7\"\r\n  },\r\n\r\n  impactColors: {\r\n    impact1:\"#f99f2d\",\r\n    impact2:\"#febd2a\",\r\n    impact3:\"#ffd743\",\r\n  },\r\n\r\n  materialOrdering: {\r\n    Wood: 14,\r\n    Steel: 13,\r\n    Limestone1: 12,\r\n    Granite1: 11,\r\n    Zinc: 10,\r\n    FiberCement: 9,\r\n    PhenResin: 8,\r\n    Terracotta: 7,\r\n    ACM: 6,\r\n    GFRC: 5,\r\n    InsMetPanel: 4,\r\n    Brick: 3,\r\n    Limestone: 2,\r\n    Granite: 1\r\n  },\r\n\r\n  typeOrdering: {\r\n    \"Masonry Veneer\": 1,\r\n    \"Face Sealed\": 2,\r\n    \"Rainscreen\": 3\r\n  }\r\n};\r\n\r\nexport default {\r\n  metaData: metaData,\r\n\r\n  allImpactsData: (cb) => {\r\n    Papa.parse(dataAllImpacts, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         var resultData = results.data.map(d => {\r\n           return { material: d.material, type: d.type, impact1: parseFloat(d.impact1), impact2: parseFloat(d.impact2), impact3: parseFloat(d.impact3) }\r\n         });\r\n         resultData = resultData.sort((a, b) => {\r\n           const orderA = metaData.materialOrdering[a.material] ? metaData.materialOrdering[a.material] : 1000;\r\n           const orderB = metaData.materialOrdering[b.material] ? metaData.materialOrdering[b.material] : 1000;\r\n           return orderA < orderB ? -1 : 1;\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  },\r\n\r\n  gwpData: (cb) => {\r\n    Papa.parse(dataGWP, {\r\n      ...PAPAPARSE_CONFIG,\r\n      complete: function(results, file) {\r\n       if(Array.isArray(results.data)) {\r\n         const resultData = results.data.map(d => {\r\n           return { letter: d.Variable, frequency: parseFloat(d.Attended) }\r\n         });\r\n         cb(resultData);\r\n       } else {\r\n         console.error('error trying to load file', results.errors);\r\n       }\r\n     }\r\n    });\r\n  }\r\n};\r\n","/* https://codesandbox.io/s/multiselect-checkboxes-oennn */\r\nimport React, { PureComponent } from \"react\";\r\nimport styles from './css/MaterialList.module.scss';\r\n\r\nexport default class MaterialList extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.materials.map(material => { return { label: material, id: material }}),\r\n      selectedItems: props.initialSelectedMaterials\r\n    };\r\n\r\n    this.listEl = null;\r\n    this.handleSelectItem = this.handleSelectItem.bind(this);\r\n  }\r\n\r\n  handleSelectItem(e) {\r\n    const { value } = e.target;\r\n    const nextValue = this.getNextValue(value);\r\n\r\n    this.setState({ selectedItems: nextValue });\r\n    this.props.updateSelectedMaterials(nextValue);\r\n  }\r\n\r\n  handleSelectAll(e) {\r\n    this.setState({ selectedItems: this.props.materials });\r\n    this.props.updateSelectedMaterials(this.props.materials);\r\n  }\r\n\r\n  getNextValue(value) {\r\n    const { selectedItems } = this.state;\r\n\r\n    // if it's already in there, remove it, otherwise append it\r\n    return selectedItems.includes(value)\r\n      ? selectedItems.filter(item => item !== value)\r\n      : [...selectedItems, value];\r\n  }\r\n\r\n  renderItems() {\r\n    const { items, selectedItems } = this.state;\r\n    return items.map(item => {\r\n      const { id, label } = item;\r\n\r\n      const materialColor = this.props.metaData.materialColors[id] ? this.props.metaData.materialColors[id] : '#000000';\r\n\r\n      return (\r\n        <li key={id} className={styles.material}>\r\n          <div className={styles.materialGraphic} style={{backgroundColor: materialColor}}></div>\r\n          <input\r\n            onChange={this.handleSelectItem}\r\n            type=\"checkbox\"\r\n            checked={selectedItems.includes(id)}\r\n            value={id}\r\n            id={`item-${id}`}\r\n          />\r\n          <label htmlFor={`item-${id}`}>{label}</label>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <button onClick={e => this.handleSelectAll.bind(this)(e)}>Select All</button>\r\n        <ul ref={node => (this.listEl = node)}>{this.renderItems()}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport HorizontalBarChart from './HorizontalBarChart';\nimport StackedBarChart from './StackedBarChart';\nimport LoadData from './data/LoadData';\nimport MaterialList from './MaterialList';\nimport './css/Main.scss';\nimport styles from './css/App.module.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartType: \"allImpacts\",\n      allImpactsData: [],\n      gwpData: [],\n      materials: [],\n      selectedMaterials: []\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    LoadData.allImpactsData(data => {\n      const materials = data.map(d => d.material);\n      console.log(data, materials);\n      this.setState({\n        allImpactsData: data,\n        materials: materials,\n        selectedMaterials: materials\n      });\n    });\n    LoadData.gwpData(data => this.setState({ gwpData: data }));\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    }, () => {\n      console.log('new state: ', this.state);\n    });\n  }\n\n  updateSelectedMaterials(newSelectedMaterials) {\n    this.setState({\n      selectedMaterials: newSelectedMaterials\n    })\n  }\n\n  render() {\n    const allImpactsDataSelectedMaterialsOnly = this.state.allImpactsData.filter(d => this.state.selectedMaterials.includes(d.material));\n\n    return (\n      <div className=\"App\">\n          <form>\n            <div className={styles.topcontrols}>\n              <div className={styles.inputgroup}>\n                <h3>CHART TYPE</h3>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"allImpacts\" name=\"chartType\" value=\"allImpacts\" checked={this.state.chartType === \"allImpacts\"} onChange={this.handleInputChange} />\n                    <label htmlFor=\"allImpacts\">All Impacts</label>\n                  </div>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"GWP\" value=\"GWP\" name=\"chartType\" checked={this.state.chartType === \"GWP\"} onChange={this.handleInputChange} />\n                    <label for=\"fGWP\">Global Warming Potential</label>\n                  </div>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"LCS\" value=\"LCS\" name=\"chartType\" checked={this.state.chartType === \"LCS\"} onChange={this.handleInputChange} />\n                    <label for=\"LCS\">Life Cycle Stage</label>\n                  </div>\n                  <div className={styles.inputitem}>\n                    <input type=\"radio\" id=\"MB\" value=\"MB\" name=\"chartType\" checked={this.state.chartType === \"MB\"} onChange={this.handleInputChange} />\n                    <label for=\"MB\">Material Breakdown</label>\n                  </div>\n              </div>\n\n              <div className={styles.inputgroup}>\n                <h3>LIFESPAN</h3>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"tenY\" name=\"lifeSpan\" value=\"tenY\" checked=\"checked\" />\n                  <label for=\"tenY\">10 Year (No Mod D.)</label>\n                </div>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"sixty1\" name=\"lifeSpan\" value=\"sixty1\" />\n                  <label for=\"sixty1\">60 Year (With Mod D)</label>\n                </div>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"sixty2\" name=\"lifeSpan\" value=\"sixty2\" />\n                  <label for=\"sixty2\">60 Year (No Mod D)</label>\n                </div>\n              </div>\n\n              <div className={styles.inputgroup}>\n                <h3>BIOGENIC CARBON</h3>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"yBio\" name=\"biogenicCarbon\" value=\"yBio\" checked=\"checked\" />\n                  <label for=\"yBio\">With Biogenic Carbon</label>\n                </div>\n                <div className={styles.inputitem}>\n                  <input type=\"radio\" id=\"nBio\" name=\"biogenicCarbon\" value=\"nBio\" />\n                  <label for=\"nBio\">No Biogenic Carbon</label>\n                </div>\n              </div>\n            </div>\n\n            {this.state.materials.length > 0 &&\n              <div className={styles.sidebar}>\n                <MaterialList\n                  materials={this.state.materials}\n                  updateSelectedMaterials={this.updateSelectedMaterials.bind(this)}\n                  initialSelectedMaterials={this.state.selectedMaterials}\n                  metaData={LoadData.metaData}\n                />\n              </div>\n             }\n\n        </form>\n\n        <div className={styles.chartContainer}>\n        {this.state.chartType === \"allImpacts\" && allImpactsDataSelectedMaterialsOnly.length > 0 && <StackedBarChart\n          selectedMaterials={allImpactsDataSelectedMaterialsOnly}\n          allMaterials={this.state.allImpactsData}\n          metaData={LoadData.metaData}\n          barHeight={40}\n          xAxisLabel=\"kg CO2eq ??\"\n        />}\n\n        {this.state.chartType === \"GWP\" && this.state.gwpData.length > 0 && <HorizontalBarChart\n          data={this.state.gwpData}\n          height={600}\n          xAxisLabel=\"kg CO2eq\"\n        />}\n        </div>\n\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"material\":\"MaterialList_material__2gb4l\",\"materialGraphic\":\"MaterialList_materialGraphic__1d0EC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StackedBarChart_container__2dKkZ\",\"tooltipContainer\":\"StackedBarChart_tooltipContainer__3Pank\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topcontrols\":\"App_topcontrols__k3zXc\",\"inputgroup\":\"App_inputgroup__1uaiG\",\"inputitem\":\"App_inputitem__1lM4C\",\"sidebar\":\"App_sidebar__vAB4e\",\"chartContainer\":\"App_chartContainer__2DarT\"};","module.exports = __webpack_public_path__ + \"static/media/gwp.7df9e12d.csv\";","module.exports = __webpack_public_path__ + \"static/media/allimpacts.766fd663.csv\";"],"sourceRoot":""}